stack_overflow:
    page_size: 15
    num_questions: 5
    num_answers: 5
no_search: False
question: "apply a function to pandas column"
summarization_pipeline:
    _target_: tldrai.modules.generation_pipeline.gguf_pipeline.GGUFModelLoader
    repo_id: "TheBloke/stable-code-3b-GGUF" #
    model_path: stable-code-3b.Q5_K_M.gguf
    chat_format: chatml
    n_ctx: 0
    n_batch: 16384
    n_threads: 8
    n_gpu_layers: 0
    use_gpu: False
generation_params:
    temperature: 0.01
    top_p: 0.95
model_token_limit: 16384
precision: bfloat16
history:
    system: |
        Given a collection of StackOverflow answers related to [sort python list], please extract the most relevant piece of code.
    user: |
        Answer 1:
        question_title: Python list sort in descending order
        creation_date: 2010-11-15
        last_activity_date: 2021-11-05
        score: 571
        is_accepted: False
        code: 
        ```
        sorted(timestamps, reverse=True)
        ```
        ```
        timestamps.sort(reverse=True)
        ```
        body: <p>This will give you a sorted version of the array.</p>
        <pre><code>sorted(timestamps, reverse=True)
        </code></pre>
        <p>If you want to sort in-place:</p>
        <pre><code>timestamps.sort(reverse=True)
        </code></pre>
        <p>Check the docs at <a href="https://docs.python.org/howto/sorting.html" rel="noreferrer">Sorting HOW TO</a></p>
        
        Answer 2:
        question_title: Python list sort in descending order
        creation_date: 2010-11-15
        last_activity_date: 2020-12-04
        score: 427
        is_accepted: True
        code: 
        ```
        lambda 
        ```
        ```
        timestamps.sort(key=lambda x: time.strptime(x, '%Y-%m-%d %H:%M:%S')[0:6], reverse=True) 
        ```
        ```
        list.sort
        ```
        ```
        def foo(x):
            return time.strptime(x, '%Y-%m-%d %H:%M:%S')[0:6]
        
        timestamps.sort(key=foo, reverse=True)
        ```
        body: <p>In one line, using a <code>lambda</code>:</p>
        <pre><code>timestamps.sort(key=lambda x: time.strptime(x, '%Y-%m-%d %H:%M:%S')[0:6], reverse=True)
        </code></pre>
        <hr />
        <p>Passing a function to <code>list.sort</code>:</p>
        <pre><code>def foo(x):
            return time.strptime(x, '%Y-%m-%d %H:%M:%S')[0:6]
        
        timestamps.sort(key=foo, reverse=True)
        </code></pre>
        
        Answer 3:
        question_title: Sorting a Python list by two fields
        creation_date: 2013-06-14
        last_activity_date: 2021-08-05
        score: 460
        is_accepted: False
        code: 
        ```
        list
        ```
        sorted_list = sorted(list, key=lambda x: (x[0], -x[1]))
        ```
        body: <p>No need to import anything when using lambda functions.<br />
        The following sorts <code>list</code> by the first element, then by the second element. You can also sort by one field ascending and another descending for example:</p>
        <pre class="lang-py prettyprint-override"><code>sorted_list = sorted(list, key=lambda x: (x[0], -x[1]))
        </code></pre>
        
        
        So, how do I sort python list?
    assistant: |
        This will sort your list in descending order:
        ```
        sorted(timestamps, reverse=True)
        ```
        
        If you to sort in-place and descending order:
        ```
        timestamps.sort(reverse=True)
        ```
prompt: Given a collection of StackOverflow answers related to [{}], please extract the most relevant piece of code.
prompt_ending: |
    
    So, how do I {}?
is_prompt_codified: True